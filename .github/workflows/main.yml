name: CI-pipeline-deploy-to-aorta-website
env:  
      EB_PACKAGE_S3_BUCKET_NAME : "aleksei-new-site"
      EB_APPLICATION_NAME       : "new%20site"
      EB_ENVIRONMENT_NAME       : "new-site-env"
      DEPLOY_PACKAGE_NAME       : "site_${{ github.sha }}.zip"
      AWS_REGION_NAME           : "us-west-2"
  
on:
  push:
    branches: [ main ]

jobs:
  archive-and-deploy-to-aws:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: create zip
        run : zip -r ${{env.DEPLOY_PACKAGE_NAME}} ./ -x *.git*
        
      - name: cred to aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key : ${{ secrets.AWS_SECRET_KEY }}
            aws-region            : ${{ env.AWS_REGION_NAME }}
            
      - name: copy to s3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - run: echo "DONE FIRST STEP!"
      
  build:
    runs-on: ubuntu-latest
    needs: [archive-and-deploy-to-aws]
    steps:
      - name: cred to aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key : ${{ secrets.AWS_SECRET_KEY }}
            aws-region            : ${{ env.AWS_REGION_NAME }}
      - name: create new Beacn App
        run : aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "commit-${{ github.sha }}"
            
      - name: deploy app
        run : aws elasticbeanstalk update-environment \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label "Ver-${{ github.sha }}"
            
      - run: echo "COMPLETE!"

